{"version":3,"sources":["components/Scoreboard.js","components/Cards.js","img/index.js","img/annie-spratt-fbAnIjhrOL4-unsplash.jpg","img/annie-spratt-ncQ2sguVlgo-unsplash.jpg","img/cactus.jpg","img/charles-deluvio-tBdqV1S2oXI-unsplash.jpg","img/scott-webb-C6oPXOatFD8-unsplash.jpg","img/scott-webb-WwWkgOMU8H8-unsplash.jpg","img/scott-webb-hDyO6rr3kqk-unsplash.jpg","img/stephanie-harvey-T0inbt7nRME-unsplash.jpg","img/stephanie-harvey-f7PfM2NklZ4-unsplash.jpg","helpers/initializeDeck.js","helpers/shuffleDeck.js","components/App.js","reportWebVitals.js","index.js"],"names":["Scoreboard","props","score","highScore","Cards","cardDeck","map","value","index","Image","src","img","alt","id","onClick","handleClick","cactusArr","initializeDeck","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","App","useState","cards","setCards","setScore","setHighScore","selected","setSelected","addScore","resetGame","useEffect","Container","className","Button","variant","shuffleDeck","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAYeA,EATI,SAACC,GAClB,OACE,8BACE,gDAAmBA,EAAMC,MAAzB,gBAA6CD,EAAME,gB,QCmB1CC,G,MArBD,SAACH,GAcb,OACE,8BACE,6BAdKA,EAAMI,SAASC,KAAI,SAACC,EAAOC,GAChC,OACE,cAACC,EAAA,EAAD,CAEEC,IAAKH,EAAMI,IACXC,IAAG,gBAAWL,EAAMM,IACpBC,QAAS,kBAAMb,EAAMc,YAAYR,EAAMM,MAHlCN,EAAMM,a,gBCGNG,G,MAFG,CCVH,IAA0B,8DCA1B,IAA0B,8DCA1B,IAA0B,mCCA1B,IAA0B,iECA1B,IAA0B,4DCA1B,IAA0B,4DCA1B,IAA0B,4DCA1B,IAA0B,kECA1B,IAA0B,oECS1BC,EAPQ,WAErB,OAAOD,EAAUV,KAAI,SAACK,EAAKE,GACzB,MAAO,CAAEA,KAAIF,WCeFO,EApBC,SAACC,GAMf,IALA,IACEC,EACAC,EAFEC,EAAeH,EAAMI,OAKlB,IAAMD,GAEXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,GC4DMQ,EAlEH,WAAM,MAEUC,mBAASX,KAFnB,mBAETY,EAFS,KAEFC,EAFE,OAGUF,mBAAS,GAHnB,mBAGT1B,EAHS,KAGF6B,EAHE,OAIkBH,mBAAS,GAJ3B,mBAITzB,EAJS,KAIE6B,EAJF,OAKgBJ,mBAAS,IALzB,mBAKTK,EALS,KAKCC,EALD,KAkBVC,EAAW,WACfJ,EAAS7B,EAAQ,IAGbkC,EAAY,WAChBL,EAAS,GACTG,EAAY,KAiBd,OANAG,qBAAU,WACJnC,EAAQC,GACV6B,EAAa9B,KAEd,CAACA,EAAOC,IAGT,8BACE,eAACmC,EAAA,EAAD,CAAWC,UAAU,+BAArB,UACE,kDACA,yTAQA,cAAC,EAAD,CAAYrC,MAAOA,EAAOC,UAAWA,EAAWiC,UAAWA,IAC3D,cAACI,EAAA,EAAD,CAAQC,QAAQ,SAAQ3B,QA3BT,WACnBsB,IACAJ,EAAa,IAyBT,wBAEA,cAAC,EAAD,CACE3B,SAAUwB,EACVM,SAAUA,EACVpB,YAAa,SAACF,GAAD,OAnDD,SAACA,GACnBiB,EAASY,EAAYb,IACjBI,EAASU,SAAS9B,GACpBuB,KAEAD,IACAD,GAAY,SAACD,GAAD,4BAAkBA,GAAlB,CAA4BpB,QA6CfE,CAAYF,YC1D5B+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a5f9ad1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Scoreboard = (props) => {\n  return (\n    <div>\n      <p>Current Score: {props.score} Best Score: {props.highScore}</p>\n\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","import React from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport \"../css/Cards.css\";\n\nconst Cards = (props) => {\n  const generateCards = () => {\n    return props.cardDeck.map((value, index) => {\n      return (\n        <Image\n          key={value.id}\n          src={value.img}\n          alt={`cactus${value.id}`}\n          onClick={() => props.handleClick(value.id)}\n        />\n      );\n    });\n  };\n\n  return (\n    <div>\n      <ul>{generateCards()}</ul>\n    </div>\n  );\n};\n\nexport default Cards;\n","import Cactus1 from './annie-spratt-fbAnIjhrOL4-unsplash.jpg';\nimport Cactus2 from './annie-spratt-ncQ2sguVlgo-unsplash.jpg'\nimport Cactus3 from './cactus.jpg'\nimport Cactus4 from './charles-deluvio-tBdqV1S2oXI-unsplash.jpg';\nimport Cactus5 from './scott-webb-C6oPXOatFD8-unsplash.jpg';\nimport Cactus6 from './scott-webb-WwWkgOMU8H8-unsplash.jpg';\nimport Cactus7 from './scott-webb-hDyO6rr3kqk-unsplash.jpg';\nimport Cactus8 from './stephanie-harvey-T0inbt7nRME-unsplash.jpg'\nimport Cactus9 from './stephanie-harvey-f7PfM2NklZ4-unsplash.jpg'\n\nconst cactusArr = [Cactus1, Cactus2, Cactus3, Cactus4, Cactus5, Cactus6, Cactus7, Cactus8, Cactus9]\n\nexport default cactusArr;\n","export default __webpack_public_path__ + \"static/media/annie-spratt-fbAnIjhrOL4-unsplash.9e1cb502.jpg\";","export default __webpack_public_path__ + \"static/media/annie-spratt-ncQ2sguVlgo-unsplash.71cd7f7f.jpg\";","export default __webpack_public_path__ + \"static/media/cactus.f72035fc.jpg\";","export default __webpack_public_path__ + \"static/media/charles-deluvio-tBdqV1S2oXI-unsplash.a798d05f.jpg\";","export default __webpack_public_path__ + \"static/media/scott-webb-C6oPXOatFD8-unsplash.33c4b598.jpg\";","export default __webpack_public_path__ + \"static/media/scott-webb-WwWkgOMU8H8-unsplash.99668fcf.jpg\";","export default __webpack_public_path__ + \"static/media/scott-webb-hDyO6rr3kqk-unsplash.be1e2f12.jpg\";","export default __webpack_public_path__ + \"static/media/stephanie-harvey-T0inbt7nRME-unsplash.5ca89a68.jpg\";","export default __webpack_public_path__ + \"static/media/stephanie-harvey-f7PfM2NklZ4-unsplash.645d51b3.jpg\";","import cactusArr from \"../img/\";\n\nconst initializeDeck = () => {\n  //map passes currentVal, idx\n  return cactusArr.map((img, id) => {\n    return { id, img };\n  });\n};\n\nexport default initializeDeck;\n","const shuffle = (array) => {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nexport default shuffle;\n","import React, { useState, useEffect } from \"react\";\nimport Scoreboard from \"./Scoreboard\";\nimport Cards from \"./Cards\";\nimport { Container } from \"react-bootstrap\";\nimport Button from 'react-bootstrap/Button'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/app.css\";\n\nimport initializeDeck from \"../helpers/initializeDeck\";\nimport shuffleDeck from \"../helpers/shuffleDeck\";\n\nconst App = () => {\n  //useState returns current state and function to update state\n  const [cards, setCards] = useState(initializeDeck());\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [selected, setSelected] = useState([]);\n\n  //checking if card has already been clicked (is in selected array)\n  const handleClick = (id) => {\n    setCards(shuffleDeck(cards));\n    if (selected.includes(id)) {\n      resetGame();\n    } else {\n      addScore();\n      setSelected((selected) => [...selected, id]);\n    }\n  };\n\n  const addScore = () => {\n    setScore(score + 1);\n  };\n\n  const resetGame = () => {\n    setScore(0);\n    setSelected([]);\n  };\n\n  const resetAllGame = () => {\n    resetGame();\n    setHighScore(0);\n  }\n\n  //similar to the componentdidupdate function. the score updater is asynchronous so the state won't be updated until the next render\n  //state updates will reflect in the next re-render\n  //if you want to perform an action based on state change, you need to use useEffect hook\n  useEffect(() => {\n    if (score > highScore) {\n      setHighScore(score);\n    }\n  }, [score, highScore]);\n\n  return (\n    <div>\n      <Container className=\"text-center mt-4 full-height\">\n        <h1>Memory Card Game</h1>\n        <p>\n          This application puts your memory to the test. You are presented with\n          multiple images. The images get shuffled every time they are clicked.\n          You CAN NOT click on any image more than once or else your score\n          resets to zero. The main objective is to get the highest score as\n          possible.\n        </p>\n\n        <Scoreboard score={score} highScore={highScore} resetGame={resetGame} />\n        <Button variant=\"custom\"onClick={resetAllGame}>Reset Game</Button>\n\n        <Cards\n          cardDeck={cards}\n          addScore={addScore}\n          handleClick={(id) => handleClick(id)}\n        />\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}